---
- name: Setup Development Environment on Arch Linux (with local dependencies)
  hosts: localhost
  become: true
  tasks:

    - name: Install Zsh
      pacman:
        name: zsh
        state: present
        update_cache: true

    - name: Set Zsh as default shell for current user
      user:
        name: "{{ ansible_user_id }}"
        shell: /usr/bin/zsh
      register: zsh_shell_changed
      when: ansible_env.SHELL != '/usr/bin/zsh'  # Check if the shell is already Zsh

    - name: Copy local Oh My Zsh setup
      copy:
        src: ./oh-my-zsh
        dest: "{{ ansible_env.HOME }}/.oh-my-zsh"
        owner: "{{ ansible_user_id }}"
        group: "{{ ansible_user_id }}"
        mode: '0755'
      when: not zsh_shell_changed.skipped and not ansible_env.HOME | regex_search('/.oh-my-zsh')

    - name: Copy .zshrc to home directory
      copy:
        src: ./zshrc
        dest: "{{ ansible_env.HOME }}/.zshrc"
        owner: "{{ ansible_user_id }}"
        group: "{{ ansible_user_id }}"
        mode: '0644'
      when: not ansible_env.HOME | regex_search('/.zshrc')

    - name: Install Neovim
      pacman:
        name: neovim
        state: present
        update_cache: true

    - name: Copy NvChad config to Neovim
      copy:
        src: ./nvim
        dest: "{{ ansible_env.HOME }}/.config/nvim"
        owner: "{{ ansible_user_id }}"
        group: "{{ ansible_user_id }}"
        mode: '0755'
      when: not ansible_env.HOME | regex_search('/.config/nvim')

    - name: Install NvChad dependencies (if Packer is installed)
      shell: nvim +PackerSync +qall
      args:
        chdir: "{{ ansible_env.HOME }}/.config/nvim"
      when: 
        - ansible_env.HOME | regex_search('/.local/share/nvim/site/pack/packer/start/packer.nvim')

    - name: Copy Zsh autosuggestions from local directory
      copy:
        src: ./zsh-autosuggestions
        dest: "{{ ansible_env.HOME }}/.oh-my-zsh/custom/plugins/zsh-autosuggestions"
        owner: "{{ ansible_user_id }}"
        group: "{{ ansible_user_id }}"
        mode: '0755'
      when: not ansible_env.HOME | regex_search('/.oh-my-zsh/custom/plugins/zsh-autosuggestions')

    - name: Install Fastfetch
      pacman:
        name: fastfetch
        state: present
        update_cache: true

    - name: Install Kitty
      pacman:
        name: kitty
        state: present
        update_cache: true

    - name: Install Miniconda
      shell: |
        wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/miniconda.sh
        bash ~/miniconda.sh -b -p $HOME/miniconda
        rm ~/miniconda.sh
      args:
        creates: "{{ ansible_env.HOME }}/miniconda"

    - name: Add Miniconda to PATH in .zshrc
      lineinfile:
        path: "{{ ansible_env.HOME }}/.zshrc"
        line: 'export PATH="$HOME/miniconda/bin:$PATH"'
        insertafter: EOF

